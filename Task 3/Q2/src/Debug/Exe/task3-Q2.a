;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Task3-Q2
;Version : 1
;Date    : 12/30/2020
;Author  : Amir Ebrahimian
;Company :
;Comments:
;
;
;
;*******************************************************/
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;
;int counter = 0;
;int charCode = 0x41;
;int x = 0 , y = 0; // x and y are coordinates of LCD
;
;interrupt [TIM0_OVF] void LCDshow(void)
; 0000 001A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001B       if (counter < 2500)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001C       counter = counter + 1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 001D 
; 0000 001E       else {      //after 2500 ms this run
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001F           lcd_gotoxy(x,y);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0020           lcd_putchar(charCode);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0021           charCode = charCode + 1; //go to next character
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0022           x = x + 1;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0023 
; 0000 0024             if(charCode == 0x5b){ // stop print if last character is "z"
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0025               TIMSK = 0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0026             }
; 0000 0027 
; 0000 0028             if(x == 15){ //go to next line after print 15 character
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0029             x = 0;
;PCODE: $0000002B VOL: 0
; 0000 002A             y = 1;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002B              }
; 0000 002C 
; 0000 002D            counter = 0;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002E        }
;PCODE: $00000030 VOL: 0
; 0000 002F }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;
;void main(void)
; 0000 0032 {
;PCODE: $00000034 VOL: 0
; 0000 0033     TCCR0 = 0x01;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0034     TIMSK = 0x01;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0035     lcd_init(27);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0036     #asm("sei")
;PCODE: $0000003B VOL: 0
	sei
;PCODE: $0000003C VOL: 0
; 0000 0037 }
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
